@using Lexicom.Concentrate.Blazor.WebAssembly.Wiki.Models
@using Lexicom.Concentrate.Blazor.WebAssembly.Wiki.Services

@inject IWikiService _wikiService

<div class="wiki-references">
    @if (References is not null && References.Count is > 0)
    {
        if (!string.IsNullOrWhiteSpace(Title))
        {
            <div class="wiki-references-title">@Title</div>
        }
        <ul class="wiki-references-list">
            @foreach (WikiReference reference in References)
            {
                @if (!string.IsNullOrWhiteSpace(reference.Url) && !string.IsNullOrWhiteSpace(reference.Text))
                {
                    <li class="wiki-references-list-item">
                        <a class="wiki-references-list-item-anchor" href="@reference.Url">@reference.Text</a>
                    </li>
                }
            }
        </ul>
    }
</div>

@code
{
    [Parameter]
    public virtual string? Title { get; set; }

    [Parameter]
    public virtual string[]? ReferenceIdentifiers { get; set; }

    protected virtual List<WikiReference>? References { get; set; }

    protected override async Task OnInitializedAsync()
    {
        References = [];

        if (ReferenceIdentifiers is not null)
        {
            foreach (string identifier in ReferenceIdentifiers)
            {
                WikiReference? reference = await _wikiService.GetReferenceFromIdentifierAsync(identifier);
                if (reference is not null)
                {
                    References.Add(reference);
                }
            }
        }

        await base.OnInitializedAsync();
    }
}